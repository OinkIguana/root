:- use(@core::list).
:- use(@core).

:- pub(actions/3).
:- pub(perform/4).

// A player who has not yet chosen a faction may choose a faction that has not yet been chosen.
actions(Name, game { factions: Factions, .. }, choose(Faction)) :-
    notin(faction { player: !Name, .. }, Factions),
    in(faction { faction: faction(Faction), player: ?, .. }, Factions).

allChosen([]).
allChosen([faction { player: !, .. }, ..Factions]) :- allChosen(Factions).

perform(Name, game { factions: Factions, phase: phase(choose_faction), ..State }, choose(Faction), game { factions: NewFactions, phase: phase(Phase), ..State }) :-
    update(
        Factions,
        faction { faction: faction(Faction), player: ?, ..Rest },
        faction { faction: faction(Faction), player: Name, ..Rest },
        NewFactions,
    ),
    (allChosen(NewFactions) ->> equal(Phase, setup); equal(Phase, choose_faction)).
